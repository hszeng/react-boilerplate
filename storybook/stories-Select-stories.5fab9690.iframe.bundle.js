"use strict";(self.webpackChunk_forsyth_barr_ui_components=self.webpackChunk_forsyth_barr_ui_components||[]).push([[707],{"./src/components/Select/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Select_Select});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),styled_components_browser_esm=(__webpack_require__("../../node_modules/react/index.js"),__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"));const SelectContainer=styled_components_browser_esm.Ay.div`
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  width: 100%;
`,Label=styled_components_browser_esm.Ay.label`
  font-weight: 500;
  color: var(--color-text);
  font-size: 0.875rem;
`,StyledSelect=styled_components_browser_esm.Ay.select`
  padding: 0.625rem 0.75rem;
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius);
  font-size: 1rem;
  background-color: var(--color-background);
  color: var(--color-text);
  transition: all 0.2s ease-in-out;
  width: 100%;
  box-sizing: border-box;
  cursor: pointer;
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;

  &:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
  }

  &:hover:not(:focus) {
    border-color: var(--color-border-hover);
  }

  &:disabled {
    background-color: var(--color-background-disabled);
    color: var(--color-text-disabled);
    cursor: not-allowed;
    opacity: 0.6;
  }

  option {
    background-color: var(--color-background);
    color: var(--color-text);
    padding: 0.5rem;
  }

  option:disabled {
    color: var(--color-text-disabled);
  }
`,Select=({id,label,value,onChange,options,placeholder,required=!1,disabled=!1,className="",...props})=>(0,jsx_runtime.jsxs)(SelectContainer,{className,children:[label&&(0,jsx_runtime.jsxs)(Label,{htmlFor:id,children:[label,required&&(0,jsx_runtime.jsx)("span",{style:{color:"var(--color-error)"},children:" *"})]}),(0,jsx_runtime.jsxs)(StyledSelect,{id,value,onChange,disabled,required,...props,children:[placeholder&&(0,jsx_runtime.jsx)("option",{value:"",disabled:!0,children:placeholder}),options.map(option=>(0,jsx_runtime.jsx)("option",{value:option.value,children:option.label},option.value))]})]}),Select_Select=Select;Select.__docgenInfo={description:"",methods:[],displayName:"Select",props:{id:{required:!0,tsType:{name:"string"},description:""},label:{required:!1,tsType:{name:"string"},description:""},value:{required:!0,tsType:{name:"string"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(e: React.ChangeEvent<HTMLSelectElement>) => void",signature:{arguments:[{type:{name:"ReactChangeEvent",raw:"React.ChangeEvent<HTMLSelectElement>",elements:[{name:"HTMLSelectElement"}]},name:"e"}],return:{name:"void"}}},description:""},options:{required:!0,tsType:{name:"Array",elements:[{name:"SelectOption"}],raw:"SelectOption[]"},description:""},placeholder:{required:!1,tsType:{name:"string"},description:""},error:{required:!1,tsType:{name:"string"},description:""},required:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},className:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"''",computed:!1}}}}},"./src/stories/Select.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllSelects:()=>AllSelects,Basic:()=>Basic,Disabled:()=>Disabled,Required:()=>Required,TaskManagementExample:()=>TaskManagementExample,WithValue:()=>WithValue,WithoutLabel:()=>WithoutLabel,WithoutPlaceholder:()=>WithoutPlaceholder,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),_components_Select__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Select/index.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Select",component:_components_Select__WEBPACK_IMPORTED_MODULE_2__.A,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{disabled:{control:{type:"boolean"}},required:{control:{type:"boolean"}}}},SelectWrapper=args=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.value||"");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Select__WEBPACK_IMPORTED_MODULE_2__.A,{...args,value,onChange:e=>setValue(e.target.value)})},fruitOptions=[{value:"apple",label:"Apple"},{value:"banana",label:"Banana"},{value:"orange",label:"Orange"},{value:"grape",label:"Grape"},{value:"strawberry",label:"Strawberry"}],colorOptions=[{value:"red",label:"Red"},{value:"blue",label:"Blue"},{value:"green",label:"Green"},{value:"yellow",label:"Yellow"},{value:"purple",label:"Purple"}],priorityOptions=[{value:"low",label:"Low"},{value:"medium",label:"Medium"},{value:"high",label:"High"}],statusOptions=[{value:"pending",label:"Pending"},{value:"in-progress",label:"In Progress"},{value:"completed",label:"Completed"}],Basic={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SelectWrapper,{...args}),args:{id:"basic-select",label:"Select Fruit",options:fruitOptions,placeholder:"Choose a fruit...",value:""}},WithValue={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SelectWrapper,{...args}),args:{id:"with-value-select",label:"Select Color",options:colorOptions,placeholder:"Choose a color...",value:"blue"}},Required={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SelectWrapper,{...args}),args:{id:"required-select",label:"Priority",options:priorityOptions,placeholder:"Select priority...",value:"",required:!0}},Disabled={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SelectWrapper,{...args}),args:{id:"disabled-select",label:"Status",options:statusOptions,placeholder:"Select status...",value:"pending",disabled:!0}},WithoutLabel={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SelectWrapper,{...args}),args:{id:"no-label-select",options:fruitOptions,placeholder:"Choose a fruit...",value:""}},WithoutPlaceholder={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SelectWrapper,{...args}),args:{id:"no-placeholder-select",label:"Select Option",options:colorOptions,value:""}},AllSelects={render:()=>{const[values,setValues]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({fruit:"",color:"",priority:"",status:""}),handleChange=field=>e=>{setValues(prev=>({...prev,[field]:e.target.value}))};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"1rem",width:"300px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Select__WEBPACK_IMPORTED_MODULE_2__.A,{id:"fruit",label:"Select Fruit",options:fruitOptions,placeholder:"Choose a fruit...",value:values.fruit,onChange:handleChange("fruit")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Select__WEBPACK_IMPORTED_MODULE_2__.A,{id:"color",label:"Select Color",options:colorOptions,placeholder:"Choose a color...",value:values.color,onChange:handleChange("color")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Select__WEBPACK_IMPORTED_MODULE_2__.A,{id:"priority",label:"Priority",options:priorityOptions,placeholder:"Select priority...",value:values.priority,onChange:handleChange("priority"),required:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Select__WEBPACK_IMPORTED_MODULE_2__.A,{id:"status",label:"Status",options:statusOptions,placeholder:"Select status...",value:values.status,onChange:handleChange("status")})]})}},TaskManagementExample={render:()=>{const[values,setValues]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({priority:"",status:""}),handleChange=field=>e=>{setValues(prev=>({...prev,[field]:e.target.value}))};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"1rem",width:"300px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Task Management Form"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Select__WEBPACK_IMPORTED_MODULE_2__.A,{id:"task-priority",label:"Task Priority",options:priorityOptions,placeholder:"Select priority...",value:values.priority,onChange:handleChange("priority"),required:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Select__WEBPACK_IMPORTED_MODULE_2__.A,{id:"task-status",label:"Task Status",options:statusOptions,placeholder:"Select status...",value:values.status,onChange:handleChange("status"),required:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{marginTop:"1rem",padding:"1rem",backgroundColor:"#f5f5f5",borderRadius:"4px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("strong",{children:"Selected Values:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Priority: ",values.priority||"Not selected"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Status: ",values.status||"Not selected"]})]})]})}},__namedExportsOrder=["Basic","WithValue","Required","Disabled","WithoutLabel","WithoutPlaceholder","AllSelects","TaskManagementExample"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  render: args => <SelectWrapper {...args} />,\n  args: {\n    id: 'basic-select',\n    label: 'Select Fruit',\n    options: fruitOptions,\n    placeholder: 'Choose a fruit...',\n    value: ''\n  }\n}",...Basic.parameters?.docs?.source}}},WithValue.parameters={...WithValue.parameters,docs:{...WithValue.parameters?.docs,source:{originalSource:"{\n  render: args => <SelectWrapper {...args} />,\n  args: {\n    id: 'with-value-select',\n    label: 'Select Color',\n    options: colorOptions,\n    placeholder: 'Choose a color...',\n    value: 'blue'\n  }\n}",...WithValue.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:"{\n  render: args => <SelectWrapper {...args} />,\n  args: {\n    id: 'required-select',\n    label: 'Priority',\n    options: priorityOptions,\n    placeholder: 'Select priority...',\n    value: '',\n    required: true\n  }\n}",...Required.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  render: args => <SelectWrapper {...args} />,\n  args: {\n    id: 'disabled-select',\n    label: 'Status',\n    options: statusOptions,\n    placeholder: 'Select status...',\n    value: 'pending',\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source}}},WithoutLabel.parameters={...WithoutLabel.parameters,docs:{...WithoutLabel.parameters?.docs,source:{originalSource:"{\n  render: args => <SelectWrapper {...args} />,\n  args: {\n    id: 'no-label-select',\n    options: fruitOptions,\n    placeholder: 'Choose a fruit...',\n    value: ''\n  }\n}",...WithoutLabel.parameters?.docs?.source}}},WithoutPlaceholder.parameters={...WithoutPlaceholder.parameters,docs:{...WithoutPlaceholder.parameters?.docs,source:{originalSource:"{\n  render: args => <SelectWrapper {...args} />,\n  args: {\n    id: 'no-placeholder-select',\n    label: 'Select Option',\n    options: colorOptions,\n    value: ''\n  }\n}",...WithoutPlaceholder.parameters?.docs?.source}}},AllSelects.parameters={...AllSelects.parameters,docs:{...AllSelects.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const [values, setValues] = useState({\n      fruit: '',\n      color: '',\n      priority: '',\n      status: ''\n    });\n    const handleChange = (field: string) => (e: any) => {\n      setValues(prev => ({\n        ...prev,\n        [field]: e.target.value\n      }));\n    };\n    return <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '1rem',\n      width: '300px'\n    }}>\n        <Select id=\"fruit\" label=\"Select Fruit\" options={fruitOptions} placeholder=\"Choose a fruit...\" value={values.fruit} onChange={handleChange('fruit')} />\n        <Select id=\"color\" label=\"Select Color\" options={colorOptions} placeholder=\"Choose a color...\" value={values.color} onChange={handleChange('color')} />\n        <Select id=\"priority\" label=\"Priority\" options={priorityOptions} placeholder=\"Select priority...\" value={values.priority} onChange={handleChange('priority')} required />\n        <Select id=\"status\" label=\"Status\" options={statusOptions} placeholder=\"Select status...\" value={values.status} onChange={handleChange('status')} />\n      </div>;\n  }\n}",...AllSelects.parameters?.docs?.source}}},TaskManagementExample.parameters={...TaskManagementExample.parameters,docs:{...TaskManagementExample.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const [values, setValues] = useState({\n      priority: '',\n      status: ''\n    });\n    const handleChange = (field: string) => (e: any) => {\n      setValues(prev => ({\n        ...prev,\n        [field]: e.target.value\n      }));\n    };\n    return <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '1rem',\n      width: '300px'\n    }}>\n        <h3>Task Management Form</h3>\n        <Select id=\"task-priority\" label=\"Task Priority\" options={priorityOptions} placeholder=\"Select priority...\" value={values.priority} onChange={handleChange('priority')} required />\n        <Select id=\"task-status\" label=\"Task Status\" options={statusOptions} placeholder=\"Select status...\" value={values.status} onChange={handleChange('status')} required />\n        <div style={{\n        marginTop: '1rem',\n        padding: '1rem',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '4px'\n      }}>\n          <strong>Selected Values:</strong>\n          <div>Priority: {values.priority || 'Not selected'}</div>\n          <div>Status: {values.status || 'Not selected'}</div>\n        </div>\n      </div>;\n  }\n}",...TaskManagementExample.parameters?.docs?.source}}}}}]);
//# sourceMappingURL=stories-Select-stories.5fab9690.iframe.bundle.js.map