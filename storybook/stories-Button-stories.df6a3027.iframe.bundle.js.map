{"version":3,"file":"stories-Button-stories.df6a3027.iframe.bundle.js","mappings":";;;;;;;;;;;;;AAkFA;;;;;;AApEA;;;;;;;;AAUA;;;;;;AAQA;;;;;;AAkDA;AACA;;;;AAhCA;;;;AAMA;;;;AA0BA;;;;;;;;;;;;;;;;;;;;;;;;AA0BA","sources":["webpack://@forsyth-barr/ui-components/./src/components/Button/Button.tsx"],"sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { ButtonProps } from './Button.types';\n\nconst getVariantStyles = (variant: ButtonProps['variant'] = 'primary') => {\n  switch (variant) {\n    case 'secondary':\n      return css`\n        background-color: var(--color-secondary);\n        color: white;\n        &:hover:not(:disabled) {\n          background-color: #5a6268;\n        }\n      `;\n    case 'outline':\n      return css`\n        background-color: transparent;\n        color: var(--color-primary);\n        border: 2px solid var(--color-primary);\n        &:hover:not(:disabled) {\n          background-color: var(--color-primary);\n          color: white;\n        }\n      `;\n    case 'danger':\n      return css`\n        background-color: var(--color-danger);\n        color: white;\n        &:hover:not(:disabled) {\n          background-color: var(--color-error-hover);\n        }\n      `;\n    default:\n      return css`\n        background-color: var(--color-primary);\n        color: white;\n        &:hover:not(:disabled) {\n          background-color: var(--color-primary-hover);\n        }\n      `;\n  }\n};\n\nconst getSizeStyles = (size: ButtonProps['size'] = 'medium') => {\n  switch (size) {\n    case 'small':\n      return css`\n        padding: 0.5rem 1rem;\n        font-size: 0.875rem;\n        border-radius: 0.25rem;\n      `;\n    case 'large':\n      return css`\n        padding: 0.75rem 1.5rem;\n        font-size: 1.125rem;\n        border-radius: 0.5rem;\n      `;\n    default:\n      return css`\n        padding: 0.625rem 1.25rem;\n        font-size: 1rem;\n        border-radius: var(--border-radius);\n      `;\n  }\n};\n\nconst StyledButton = styled.button<{\n  $variant?: ButtonProps['variant'];\n  $size?: ButtonProps['size'];\n}>`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 500;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  white-space: nowrap;\n  user-select: none;\n  box-shadow: var(--shadow-sm);\n\n  ${props => getVariantStyles(props.$variant)}\n  ${props => getSizeStyles(props.$size)}\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    background-color: var(--color-background-disabled);\n    color: var(--color-text-disabled);\n  }\n\n  &:focus {\n    outline: 2px solid var(--color-primary);\n    outline-offset: 2px;\n  }\n\n  &:active:not(:disabled) {\n    transform: translateY(1px);\n    box-shadow: var(--shadow-sm);\n  }\n\n  /* Responsive design */\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: center;\n  }\n`;\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  variant = 'primary',\n  size = 'medium',\n  disabled = false,\n  onClick,\n  type = 'button',\n  className = '',\n  ...props\n}) => {\n  return (\n    <StyledButton\n      $variant={variant}\n      $size={size}\n      disabled={disabled}\n      onClick={onClick}\n      type={type}\n      className={className}\n      {...props}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n"],"names":[],"sourceRoot":""}