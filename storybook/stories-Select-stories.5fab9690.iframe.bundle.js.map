{"version":3,"file":"stories-Select-stories.5fab9690.iframe.bundle.js","mappings":";;;;;AAWA;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA","sources":["webpack://@forsyth-barr/ui-components/./src/components/Select/Select.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { SelectProps } from './Select.types';\n\nconst SelectContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  font-weight: 500;\n  color: var(--color-text);\n  font-size: 0.875rem;\n`;\n\nconst StyledSelect = styled.select<SelectProps>`\n  padding: 0.625rem 0.75rem;\n  border: 1px solid var(--color-border);\n  border-radius: var(--border-radius);\n  font-size: 1rem;\n  background-color: var(--color-background);\n  color: var(--color-text);\n  transition: all 0.2s ease-in-out;\n  width: 100%;\n  box-sizing: border-box;\n  cursor: pointer;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e\");\n  background-position: right 0.5rem center;\n  background-repeat: no-repeat;\n  background-size: 1.5em 1.5em;\n  padding-right: 2.5rem;\n\n  &:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n\n  &:hover:not(:focus) {\n    border-color: var(--color-border-hover);\n  }\n\n  &:disabled {\n    background-color: var(--color-background-disabled);\n    color: var(--color-text-disabled);\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  option {\n    background-color: var(--color-background);\n    color: var(--color-text);\n    padding: 0.5rem;\n  }\n\n  option:disabled {\n    color: var(--color-text-disabled);\n  }\n`;\n\nconst Select: React.FC<SelectProps> = ({\n  id,\n  label,\n  value,\n  onChange,\n  options,\n  placeholder,\n  required = false,\n  disabled = false,\n  className = '',\n  ...props\n}) => {\n  return (\n    <SelectContainer className={className}>\n      {label && (\n        <Label htmlFor={id}>\n          {label}\n          {required && <span style={{ color: 'var(--color-error)' }}> *</span>}\n        </Label>\n      )}\n      <StyledSelect\n        id={id}\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n        required={required}\n        {...props}\n      >\n        {placeholder && (\n          <option value=\"\" disabled>\n            {placeholder}\n          </option>\n        )}\n        {options.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </StyledSelect>\n    </SelectContainer>\n  );\n};\n\nexport default Select;\n"],"names":[],"sourceRoot":""}