{"version":3,"file":"stories-Input-stories.2c5c38e1.iframe.bundle.js","mappings":";;;;;AAwBA;;;;AAMA;;;;;;;;;;;AAWA;;;;AA7BA;;AA6BA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;;;;;AAUA;;;;AAMA","sources":["webpack://@forsyth-barr/ui-components/./src/components/Input/Input.tsx"],"sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { InputProps } from './Input.types';\n\nconst getInputStyles = (type: InputProps['type'] = 'text') => {\n  if (type === 'textarea') {\n    return css`\n      resize: vertical;\n      min-height: 100px;\n      font-family: inherit;\n    `;\n  }\n  return css`\n    height: 2.5rem;\n  `;\n};\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  font-weight: 500;\n  color: var(--color-text);\n  font-size: 0.875rem;\n`;\n\nconst StyledInput = styled.input<InputProps>`\n  padding: 0.625rem 0.75rem;\n  border: 1px solid var(--color-border);\n  border-radius: var(--border-radius);\n  font-size: 1rem;\n  background-color: var(--color-background);\n  color: var(--color-text);\n  transition: all 0.2s ease-in-out;\n  width: 100%;\n  box-sizing: border-box;\n\n  ${props => getInputStyles(props.type)}\n\n  &::placeholder {\n    color: var(--color-text-placeholder);\n  }\n\n  &:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n\n  &:hover:not(:focus) {\n    border-color: var(--color-border-hover);\n  }\n\n  &:disabled {\n    background-color: var(--color-background-disabled);\n    color: var(--color-text-disabled);\n    cursor: not-allowed;\n  }\n\n  ${props =>\n    props.error &&\n    css`\n      border-color: var(--color-error);\n      &:focus {\n        box-shadow: 0 0 0 3px rgba(248, 113, 113, 0.1);\n      }\n    `}\n`;\n\nconst StyledTextarea = styled.textarea<InputProps>`\n  padding: 0.625rem 0.75rem;\n  border: 1px solid var(--color-border);\n  border-radius: var(--border-radius);\n  font-size: 1rem;\n  background-color: var(--color-background);\n  color: var(--color-text);\n  transition: all 0.2s ease-in-out;\n  width: 100%;\n  box-sizing: border-box;\n  resize: vertical;\n  min-height: 100px;\n  font-family: inherit;\n\n  &::placeholder {\n    color: var(--color-text-placeholder);\n  }\n\n  &:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n\n  &:hover:not(:focus) {\n    border-color: var(--color-border-hover);\n  }\n\n  &:disabled {\n    background-color: var(--color-background-disabled);\n    color: var(--color-text-disabled);\n    cursor: not-allowed;\n  }\n\n  ${props =>\n    props.error &&\n    css`\n      border-color: var(--color-error);\n      &:focus {\n        box-shadow: 0 0 0 3px rgba(248, 113, 113, 0.1);\n      }\n    `}\n`;\n\nconst ErrorText = styled.span`\n  color: var(--color-error);\n  font-size: 0.75rem;\n  margin-top: 0.25rem;\n`;\n\nconst Input: React.FC<InputProps> = ({\n  id,\n  type = 'text',\n  label,\n  placeholder,\n  value,\n  onChange,\n  error,\n  required = false,\n  disabled = false,\n  rows = 3,\n  className = '',\n  ...props\n}) => {\n  const InputComponent = type === 'textarea' ? StyledTextarea : StyledInput;\n\n  return (\n    <InputContainer className={className}>\n      {label && (\n        <Label htmlFor={id}>\n          {label}\n          {required && <span style={{ color: 'var(--color-error)' }}> *</span>}\n        </Label>\n      )}\n      <InputComponent\n        id={id}\n        type={type === 'textarea' ? undefined : type}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        error={error}\n        disabled={disabled}\n        required={required}\n        rows={type === 'textarea' ? rows : undefined}\n        {...props}\n      />\n      {error && <ErrorText>{error}</ErrorText>}\n    </InputContainer>\n  );\n};\n\nexport default Input;\n"],"names":[],"sourceRoot":""}