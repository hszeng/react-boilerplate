.taskManager {
  max-width: 1400px;
  margin: 0 auto;
  padding: 1.5rem;
  min-height: 100vh;
  background: linear-gradient(135deg, var(--color-background) 0%, var(--color-background-secondary) 100%);
  color: var(--color-text);
  font-family:
    -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue',
    Arial, sans-serif;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2.5rem;
  padding: 2.5rem 3rem;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border-radius: 1.5rem;
  color: white;
  box-shadow: 0 20px 40px rgba(102, 126, 234, 0.15);
  position: relative;
  overflow: hidden;
}

.header::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="75" cy="75" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="50" cy="10" r="0.5" fill="rgba(255,255,255,0.1)"/><circle cx="10" cy="60" r="0.5" fill="rgba(255,255,255,0.1)"/><circle cx="90" cy="40" r="0.5" fill="rgba(255,255,255,0.1)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
  opacity: 0.3;
}

.header h1 {
  margin: 0;
  font-size: 2.75rem;
  font-weight: 800;
  color: white;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  position: relative;
  z-index: 1;
}

.themeToggle {
  background: rgba(255, 255, 255, 0.15) !important;
  color: white !important;
  border: 2px solid rgba(255, 255, 255, 0.3) !important;
  padding: 0.75rem 1.5rem !important;
  border-radius: 1rem !important;
  font-size: 1rem !important;
  font-weight: 600 !important;
  cursor: pointer !important;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
  backdrop-filter: blur(20px) !important;
  position: relative !important;
  z-index: 1 !important;
  display: flex !important;
  align-items: center !important;
  gap: 0.5rem !important;
  min-width: auto !important;
}

.themeToggle:hover {
  background: rgba(255, 255, 255, 0.25) !important;
  border-color: rgba(255, 255, 255, 0.5) !important;
  transform: translateY(-2px) !important;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2) !important;
}

.themeToggle:focus {
  outline: none !important;
  box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.3) !important;
}

.themeText {
  font-size: 0.875rem;
  font-weight: 600;
  margin-left: 0.25rem;
}

.addButton {
  background: rgba(255, 255, 255, 0.15);
  color: white;
  border: 2px solid rgba(255, 255, 255, 0.3);
  padding: 1rem 2.5rem;
  border-radius: 1rem;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  backdrop-filter: blur(20px);
  position: relative;
  z-index: 1;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.addButton:hover {
  background: rgba(255, 255, 255, 0.25);
  border-color: rgba(255, 255, 255, 0.5);
  transform: translateY(-3px);
  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
}

.addButton:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.3);
}

.error {
  background: linear-gradient(135deg, #fee2e2, #fecaca);
  color: #dc2626;
  padding: 1.5rem 2rem;
  border-radius: 1rem;
  margin-bottom: 2rem;
  border: 1px solid #fca5a5;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-shadow: 0 10px 25px rgba(220, 38, 38, 0.1);
  backdrop-filter: blur(10px);
}

.error button {
  background: #dc2626;
  border: none;
  color: white;
  cursor: pointer;
  font-size: 0.875rem;
  padding: 0.75rem 1.5rem;
  border-radius: 0.75rem;
  transition: all 0.2s ease;
  font-weight: 500;
}

.error button:hover {
  background: #b91c1c;
  transform: translateY(-1px);
  box-shadow: 0 5px 15px rgba(220, 38, 38, 0.3);
}

/* Enhanced filter and sort styles */
.filters {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  margin-bottom: 2.5rem;
  padding: 2rem;
  background: var(--color-background);
  border-radius: 1.5rem;
  border: 1px solid var(--color-border);
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.08);
  backdrop-filter: blur(20px);
}

.main {
  margin-top: 2.5rem;
}

.taskGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
  gap: 2rem;
  margin-top: 1.5rem;
}

.emptyState {
  text-align: center;
  padding: 4rem 2rem;
  color: var(--color-text-muted);
  font-size: 1.2rem;
  background: var(--color-background);
  border-radius: 1.5rem;
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.08);
  border: 2px dashed var(--color-border);
}

.emptyState p {
  margin: 0;
  font-weight: 500;
}

.filterSection,
.sortSection {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  flex: 1;
}

.filterHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
  padding-bottom: 0.75rem;
  border-bottom: 2px solid #667eea;
  position: relative;
}

.filterHeader::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 50px;
  height: 2px;
  background: linear-gradient(90deg, #667eea, #764ba2);
  border-radius: 1px;
}

.filterSection h3,
.sortSection h3 {
  margin: 0;
  font-size: 1.1rem;
  font-weight: 700;
  color: var(--color-text);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.filterRow {
  display: flex;
  gap: 2rem;
  flex-wrap: wrap;
  align-items: flex-start;
}

.filterControls {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
  align-items: center;
}

.filterItem {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  min-width: 140px;
}

.filterItem label {
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--color-text-muted);
  margin: 0;
  text-transform: uppercase;
  letter-spacing: 0.25px;
}

.filters input,
.filters select {
  padding: 0.75rem 1rem;
  border: 2px solid var(--color-border);
  border-radius: 0.75rem;
  background-color: var(--color-background-secondary);
  color: var(--color-text);
  font-size: 0.875rem;
  font-weight: 500;
  transition: all 0.2s ease;
  min-width: 140px;
}

.filters input:focus,
.filters select:focus {
  outline: none;
  border-color: var(--color-primary);
  background-color: var(--color-background);
  box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.1);
  transform: translateY(-1px);
}

/* Enhanced sort button styles */
.sortButtons {
  display: flex;
  gap: 0.75rem;
  flex-wrap: wrap;
}

.sortButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.25rem;
  border: 2px solid var(--color-border);
  border-radius: 0.75rem;
  background-color: var(--color-background-secondary);
  color: var(--color-text-muted);
  font-size: 0.875rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  min-width: 120px;
  justify-content: space-between;
  text-transform: uppercase;
  letter-spacing: 0.25px;
}

.sortButton:hover {
  background-color: var(--color-primary);
  color: white;
  border-color: var(--color-primary);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);
}

.sortButton.active {
  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-hover));
  color: white;
  border-color: var(--color-primary);
  box-shadow: 0 8px 25px rgba(59, 130, 246, 0.4);
  transform: translateY(-2px);
}

.sortLabel {
  font-weight: 600;
}

.sortIcon {
  font-size: 1.1rem;
  font-weight: bold;
  transition: transform 0.2s ease;
}

.sortButton:hover .sortIcon {
  transform: scale(1.1);
}

.sortButton.active .sortIcon {
  animation: pulse 0.6s ease-in-out;
}

@keyframes pulse {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
}

.filterActions {
  display: flex;
  justify-content: flex-start;
  padding-top: 1rem;
  margin-top: 1rem;
  border-top: 1px solid #e2e8f0;
}

.clearButton {
  background: linear-gradient(135deg, #64748b, #475569);
  color: white;
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 0.75rem;
  cursor: pointer;
  font-size: 0.875rem;
  font-weight: 600;
  transition: all 0.2s ease;
  text-transform: uppercase;
  letter-spacing: 0.25px;
}

.clearButton:hover {
  background: linear-gradient(135deg, #475569, #334155);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(71, 85, 105, 0.3);
}

/* Loading styles */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 60vh;
  gap: 1.5rem;
}

.spinner {
  width: 50px;
  height: 50px;
  border: 4px solid #e2e8f0;
  border-top: 4px solid #667eea;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.loadingContainer p {
  font-size: 1.1rem;
  color: var(--color-text-muted);
  font-weight: 500;
}

/* Responsive design */
@media (max-width: 1024px) {
  .taskManager {
    padding: 1rem;
  }

  .header {
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .header h1 {
    font-size: 2.25rem;
  }

  .taskGrid {
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 1.5rem;
  }
}

@media (max-width: 768px) {
  .header {
    flex-direction: column;
    gap: 1.5rem;
    text-align: center;
    padding: 2rem 1.5rem;
  }

  .header h1 {
    font-size: 2rem;
  }

  .filters {
    padding: 1.5rem;
  }

  .filterRow {
    flex-direction: column;
    gap: 1.5rem;
  }

  .filterControls {
    justify-content: center;
  }

  .taskGrid {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }

  .sortButtons {
    justify-content: center;
  }
}

@media (max-width: 480px) {
  .taskManager {
    padding: 0.75rem;
  }

  .header {
    padding: 1.5rem 1rem;
  }

  .header h1 {
    font-size: 1.75rem;
  }

  .filters {
    padding: 1rem;
  }

  .filterControls {
    flex-direction: column;
    align-items: stretch;
  }

  .filterItem {
    min-width: auto;
  }

  .filters input,
  .filters select {
    min-width: auto;
  }
}
