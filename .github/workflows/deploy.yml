name: Test and Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run shared-components unit tests
      run: npm run test --workspace=packages/shared-components
      
    - name: Build shared-components
      run: npm run build:shared
      
    - name: Build task-management
      run: npm run build:task-management
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Start task-management server and run E2E tests
      run: |
        cd packages/task-management
        # Start the server in background
        npm run server &
        SERVER_PID=$!
        
        # Wait for server to start
        sleep 15
        
        # Run E2E tests
        npm run test:e2e
        
        # Kill the server
        kill $SERVER_PID || true
      env:
        CI: true
        
    - name: Upload Playwright test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: packages/task-management/playwright-report/
        retention-days: 30
        
    - name: Upload Playwright screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-screenshots
        path: packages/task-management/test-results/
        retention-days: 30

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build shared-components
      run: npm run build:shared
      
    - name: Build Storybook
      run: npm run build-storybook
      
    - name: Build task-management
      run: npm run build:task-management
      
    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
    - name: Deploy task-management to GitHub Pages
      run: npx gh-pages --dist packages/task-management/dist --dest task-management --no-history
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Deploy Storybook to GitHub Pages
      run: npx gh-pages --dist packages/shared-components/storybook-static --dest storybook --no-history
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Comment deployment URLs
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## ðŸš€ Deployment Successful!
          
          **Task Management**: https://hszeng.github.io/react-boilerplate/task-management/
          **Storybook**: https://hszeng.github.io/react-boilerplate/storybook/
          
          All tests passed! âœ…`
          })
